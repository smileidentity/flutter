// Mocks generated by Mockito 5.4.2 from annotations
// in smile_id_flutter/test/smile_id_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:smile_id/messages.g.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFlutterAuthenticationResponse_0 extends _i1.SmartFake
    implements _i2.FlutterAuthenticationResponse {
  _FakeFlutterAuthenticationResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterEnhancedKycAsyncResponse_1 extends _i1.SmartFake
    implements _i2.FlutterEnhancedKycAsyncResponse {
  _FakeFlutterEnhancedKycAsyncResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeObject_2 extends _i1.SmartFake implements Object {
  _FakeObject_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterPartnerParams_3 extends _i1.SmartFake
    implements _i2.FlutterPartnerParams {
  _FakeFlutterPartnerParams_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SmileIDApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockSmileIDApi extends _i1.Mock implements _i2.SmileIDApi {
  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<_i2.FlutterAuthenticationResponse> authenticate(
          _i2.FlutterAuthenticationRequest? arg_request) =>
      (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [arg_request],
        ),
        returnValue: _i3.Future<_i2.FlutterAuthenticationResponse>.value(
            _FakeFlutterAuthenticationResponse_0(
          this,
          Invocation.method(
            #authenticate,
            [arg_request],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.FlutterAuthenticationResponse>.value(
                _FakeFlutterAuthenticationResponse_0(
          this,
          Invocation.method(
            #authenticate,
            [arg_request],
          ),
        )),
      ) as _i3.Future<_i2.FlutterAuthenticationResponse>);
  @override
  _i3.Future<_i2.FlutterEnhancedKycAsyncResponse> doEnhancedKycAsync(
          _i2.FlutterEnhancedKycRequest? arg_request) =>
      (super.noSuchMethod(
        Invocation.method(
          #doEnhancedKycAsync,
          [arg_request],
        ),
        returnValue: _i3.Future<_i2.FlutterEnhancedKycAsyncResponse>.value(
            _FakeFlutterEnhancedKycAsyncResponse_1(
          this,
          Invocation.method(
            #doEnhancedKycAsync,
            [arg_request],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.FlutterEnhancedKycAsyncResponse>.value(
                _FakeFlutterEnhancedKycAsyncResponse_1(
          this,
          Invocation.method(
            #doEnhancedKycAsync,
            [arg_request],
          ),
        )),
      ) as _i3.Future<_i2.FlutterEnhancedKycAsyncResponse>);
}

/// A class which mocks [FlutterAuthenticationRequest].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterAuthenticationRequest extends _i1.Mock
    implements _i2.FlutterAuthenticationRequest {
  @override
  set jobType(_i2.FlutterJobType? _jobType) => super.noSuchMethod(
        Invocation.setter(
          #jobType,
          _jobType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enrollment => (super.noSuchMethod(
        Invocation.getter(#enrollment),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  set enrollment(bool? _enrollment) => super.noSuchMethod(
        Invocation.setter(
          #enrollment,
          _enrollment,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set country(String? _country) => super.noSuchMethod(
        Invocation.setter(
          #country,
          _country,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set idType(String? _idType) => super.noSuchMethod(
        Invocation.setter(
          #idType,
          _idType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set updateEnrolledImage(bool? _updateEnrolledImage) => super.noSuchMethod(
        Invocation.setter(
          #updateEnrolledImage,
          _updateEnrolledImage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set jobId(String? _jobId) => super.noSuchMethod(
        Invocation.setter(
          #jobId,
          _jobId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set userId(String? _userId) => super.noSuchMethod(
        Invocation.setter(
          #userId,
          _userId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get signature => (super.noSuchMethod(
        Invocation.getter(#signature),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  set signature(bool? _signature) => super.noSuchMethod(
        Invocation.setter(
          #signature,
          _signature,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get production => (super.noSuchMethod(
        Invocation.getter(#production),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  set production(bool? _production) => super.noSuchMethod(
        Invocation.setter(
          #production,
          _production,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get partnerId => (super.noSuchMethod(
        Invocation.getter(#partnerId),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set partnerId(String? _partnerId) => super.noSuchMethod(
        Invocation.setter(
          #partnerId,
          _partnerId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get authToken => (super.noSuchMethod(
        Invocation.getter(#authToken),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set authToken(String? _authToken) => super.noSuchMethod(
        Invocation.setter(
          #authToken,
          _authToken,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Object encode() => (super.noSuchMethod(
        Invocation.method(
          #encode,
          [],
        ),
        returnValue: _FakeObject_2(
          this,
          Invocation.method(
            #encode,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeObject_2(
          this,
          Invocation.method(
            #encode,
            [],
          ),
        ),
      ) as Object);
}

/// A class which mocks [FlutterEnhancedKycRequest].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterEnhancedKycRequest extends _i1.Mock
    implements _i2.FlutterEnhancedKycRequest {
  @override
  String get country => (super.noSuchMethod(
        Invocation.getter(#country),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set country(String? _country) => super.noSuchMethod(
        Invocation.setter(
          #country,
          _country,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get idType => (super.noSuchMethod(
        Invocation.getter(#idType),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set idType(String? _idType) => super.noSuchMethod(
        Invocation.setter(
          #idType,
          _idType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get idNumber => (super.noSuchMethod(
        Invocation.getter(#idNumber),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set idNumber(String? _idNumber) => super.noSuchMethod(
        Invocation.setter(
          #idNumber,
          _idNumber,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set firstName(String? _firstName) => super.noSuchMethod(
        Invocation.setter(
          #firstName,
          _firstName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set middleName(String? _middleName) => super.noSuchMethod(
        Invocation.setter(
          #middleName,
          _middleName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set lastName(String? _lastName) => super.noSuchMethod(
        Invocation.setter(
          #lastName,
          _lastName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set dob(String? _dob) => super.noSuchMethod(
        Invocation.setter(
          #dob,
          _dob,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set phoneNumber(String? _phoneNumber) => super.noSuchMethod(
        Invocation.setter(
          #phoneNumber,
          _phoneNumber,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set bankCode(String? _bankCode) => super.noSuchMethod(
        Invocation.setter(
          #bankCode,
          _bankCode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set callbackUrl(String? _callbackUrl) => super.noSuchMethod(
        Invocation.setter(
          #callbackUrl,
          _callbackUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.FlutterPartnerParams get partnerParams => (super.noSuchMethod(
        Invocation.getter(#partnerParams),
        returnValue: _FakeFlutterPartnerParams_3(
          this,
          Invocation.getter(#partnerParams),
        ),
        returnValueForMissingStub: _FakeFlutterPartnerParams_3(
          this,
          Invocation.getter(#partnerParams),
        ),
      ) as _i2.FlutterPartnerParams);
  @override
  set partnerParams(_i2.FlutterPartnerParams? _partnerParams) =>
      super.noSuchMethod(
        Invocation.setter(
          #partnerParams,
          _partnerParams,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get partnerId => (super.noSuchMethod(
        Invocation.getter(#partnerId),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set partnerId(String? _partnerId) => super.noSuchMethod(
        Invocation.setter(
          #partnerId,
          _partnerId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get sourceSdk => (super.noSuchMethod(
        Invocation.getter(#sourceSdk),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set sourceSdk(String? _sourceSdk) => super.noSuchMethod(
        Invocation.setter(
          #sourceSdk,
          _sourceSdk,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get sourceSdkVersion => (super.noSuchMethod(
        Invocation.getter(#sourceSdkVersion),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set sourceSdkVersion(String? _sourceSdkVersion) => super.noSuchMethod(
        Invocation.setter(
          #sourceSdkVersion,
          _sourceSdkVersion,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get timestamp => (super.noSuchMethod(
        Invocation.getter(#timestamp),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set timestamp(String? _timestamp) => super.noSuchMethod(
        Invocation.setter(
          #timestamp,
          _timestamp,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get signature => (super.noSuchMethod(
        Invocation.getter(#signature),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set signature(String? _signature) => super.noSuchMethod(
        Invocation.setter(
          #signature,
          _signature,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Object encode() => (super.noSuchMethod(
        Invocation.method(
          #encode,
          [],
        ),
        returnValue: _FakeObject_2(
          this,
          Invocation.method(
            #encode,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeObject_2(
          this,
          Invocation.method(
            #encode,
            [],
          ),
        ),
      ) as Object);
}
